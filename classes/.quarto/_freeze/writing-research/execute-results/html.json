{
  "hash": "58c0e56162259bb44e12ebc512c7854d",
  "result": {
    "markdown": "# Writing Research\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\n\nnp.random.seed(853)\n```\n:::\n\n\n#### Estimands\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nnum_draws = np.concatenate([\n    np.repeat(10, 10),\n    np.repeat(100, 100),\n    np.repeat(1000, 1000),\n    np.repeat(10000, 10000)\n])\n\ndraw = np.random.normal(loc=0, scale=1, size=len(num_draws))\n\ndf = pd.DataFrame({\n    'num_draws': num_draws,\n    'draw': draw\n})\n\nresult = df.groupby('num_draws').agg({\n    'draw': [\n        ('estimator_one', lambda x: x.sum() / len(x)),\n        ('estimator_two', lambda x: np.sort(x)[len(x)//2])\n    ]\n}).reset_index()\n\nresult.columns = ['Number of draws', 'Estimator one', 'Estimator two']\nresult = result.round(2)\n\nmdtable = result.to_markdown(index=False)\nprint(mdtable)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n|   Number of draws |   Estimator one |   Estimator two |\n|------------------:|----------------:|----------------:|\n|                10 |            0.23 |            0.08 |\n|               100 |            0.16 |            0.21 |\n|              1000 |           -0.03 |           -0.05 |\n|             10000 |           -0.01 |            0.01 |\n```\n:::\n:::\n\n\n## Directed Acyclic Graphs (DAGs)\n\n\n\n```{dot}\n//| label: fig-dot-firstdag-quarto\n//| fig-cap: \"We expect a causal relationship between x and y, where x influences y\"\n//| fig-width: 4\ndigraph D {\n  node [shape=plaintext, fontname = \"helvetica\"];\n  \n  {rank=same x y};\n  \n  x -> y;\n}\n```\n\n```{dot}\n//| label: fig-education-income-happiness\n//| fig-cap: \"Education is a confounder that affects the relationship between income and happiness\"\n//| fig-width: 4\ndigraph D {\n  \n  node [shape=plaintext, fontname = \"helvetica\"];\n  \n  a [label = \"Income\"];\n  b [label = \"Happiness\"];\n  c [label = \"Education\"];\n  \n  { rank=same a b};\n  \n  a->b;\n  c->{a, b};\n}\n```\n\n```{dot}\n//| label: fig-children-income-happiness\n//| fig-cap: \"blah blah blah\"\n//| fig-width: 4\n//| \ndigraph D {\n\n  node [shape=plaintext, fontname = \"helvetica\"];\n  \n  a [label = \"Income\"];\n  b [label = \"Happiness\"];\n  c [label = \"Children\"];\n  \n  { rank=same a b};\n  \n  a->{b, c};\n  c->b;\n}\n```\n\n```{dot}\n//| label: fig-exercise-income-happiness\n//| fig-cap: \"blah blah blah\"\n//| fig-width: 4\n//| \ndigraph D {\n\n  node [shape=plaintext, fontname = \"helvetica\"];\n  \n  a [label = \"Income\"];\n  b [label = \"Happiness\"];\n  c [label = \"Exercise\"];\n  \n  { rank=same a b};\n  \n  a->{b c};\n  b->c;\n}\n```\n\n",
    "supporting": [
      "writing-research_files"
    ],
    "filters": [],
    "includes": {}
  }
}